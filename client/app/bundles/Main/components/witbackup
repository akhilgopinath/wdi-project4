import ChatBot from 'react-simple-chatbot'
import React, { Component } from 'react';
import { Wit, log } from 'node-wit'

import PropTypes from 'prop-types'

export default class WitAi extends Component {
  constructor(props) {
    super(props);
    console.log(this.props.loading)
    this.state = {
      loading: true,
      result: '',
      trigger: false,
    };

    this.triggetNext = this.triggetNext.bind(this);
  }


  componentWillMount() {
    const self = this;
    const { steps } = this.props;
    const search = steps.search.value;

    const client = new Wit({accessToken: 'MY_TOKEN'});
    client.message('what is the weather in London?', {})
    .then((data) => {
      console.log('Yay, got Wit.ai response: ' + JSON.stringify(data));
      if (this.readyState === 4) {
        const data = JSON.parse(this.responseText);
        const bindings = data.results.bindings;
        if (bindings && bindings.length > 0) {
          self.setState({ loading: false, result: bindings[0].comment.value });
        } else {
          self.setState({ loading: false, result: 'Not found.' });
        }
      }
    })
    .catch(console.error);

  }

  triggetNext(triggerInput) {
    this.setState({ trigger: true }, () => {
      // this.props.triggerNextStep(null,{ end });
       this.props.triggerNextStep({ value: null, trigger: triggerInput });
    });
  }

  render() {
    const { loading, result, trigger } = this.state;

    return (
      <div className="dbpedia">
        { loading ? <Loading /> : result }
        {
          !loading &&
          <div
            style={{
              textAlign: 'center',
              marginTop: 20,
            }}
          >
            {
              !trigger &&
              <button
                onClick={() => this.triggetNext(this.props.steps.search.value)}
              >
                Search Again
              </button>
            }
          </div>
        }
      </div>
    );
  }
}

WitAi.propTypes = {
  steps: PropTypes.object,
  triggerNextStep: PropTypes.func,
};

WitAi.defaultProps = {
  steps: undefined,
  triggerNextStep: undefined,
};
